swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /scheduler/:
    get:
      tags:
      - scheduler
      description: get Scheduler
      operationId: SchedulerController.GetAll
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Scheduler'
        "403":
          description: ""
  /scheduler/weather:
    put:
      tags:
      - scheduler
      description: update the Scheduler
      operationId: SchedulerController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Scheduler content
        required: true
        schema:
          $ref: '#/definitions/models.Scheduler'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Scheduler'
        "403":
          description: :id is not int
  /weather/:
    get:
      tags:
      - weather
      description: get Weather by id
      operationId: WeatherController.Get
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Weather'
        "403":
          description: :id is empty
  /weather/all:
    get:
      tags:
      - weather
      description: retrieve all Weather objects
      operationId: WeatherController.GetAll
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.WeatherDB'
        "403":
          description: :id is empty
definitions:
  models.Scheduler:
    title: Scheduler
    type: object
  models.Weather:
    title: Weather
    type: object
    properties:
      Cloudines:
        type: string
      GeoCoordinates:
        type: string
      Humidity:
        type: string
      Id:
        type: integer
        format: int64
      Location:
        type: string
      Presure:
        type: string
      RequestedTime:
        type: string
        format: datetime
      Sunrise:
        type: string
      Sunset:
        type: string
      Temperature:
        type: string
      Wind:
        type: string
  models.WeatherDB:
    title: WeatherDB
    type: object
tags:
- name: weather
  description: |
    WeatherController operations for Weather
- name: scheduler
  description: |
    SchedulerController operations for Scheduler
